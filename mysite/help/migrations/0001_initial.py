# Generated by Django 5.1.2 on 2024-12-08 17:19

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0095_query_searchpromotion_querydailyhits"),
        ("wagtailimages", "0026_delete_uploadedimage"),
    ]

    operations = [
        migrations.CreateModel(
            name="HelpArticlePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("social_text", models.CharField(blank=True, max_length=255)),
                (
                    "listing_title",
                    models.CharField(
                        blank=True,
                        help_text="Override the page title when this page appears on listings",
                        max_length=255,
                    ),
                ),
                (
                    "listing_summary",
                    models.CharField(
                        blank=True,
                        help_text="The text description used when this page appears on listings. It's also used if meta description is absent",
                        max_length=255,
                    ),
                ),
                (
                    "appear_in_search_results",
                    models.BooleanField(
                        default=True,
                        help_text="Make this page indexable by search engines.If unchecked this page will no longer be indexed by search engines.",
                    ),
                ),
                ("subtitle", models.CharField(blank=True, max_length=255)),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            ("heading_block", 2),
                            ("paragraph_block", 3),
                            ("image_block", 6),
                            ("gallery", 7),
                            ("block_quote", 10),
                            ("embed_block", 11),
                            ("faq", 16),
                            ("document", 17),
                            ("link", 24),
                            ("further_reading", 24),
                        ],
                        blank=True,
                        block_lookup={
                            0: ("wagtail.blocks.CharBlock", (), {"required": True}),
                            1: (
                                "wagtail.blocks.ChoiceBlock",
                                [],
                                {
                                    "blank": True,
                                    "choices": [
                                        ("", "Select a header size"),
                                        ("h2", "H2"),
                                        ("h3", "H3"),
                                        ("h4", "H4"),
                                    ],
                                    "required": False,
                                },
                            ),
                            2: (
                                "wagtail.blocks.StructBlock",
                                [[("heading_text", 0), ("size", 1)]],
                                {},
                            ),
                            3: (
                                "wagtail.blocks.RichTextBlock",
                                (),
                                {
                                    "icon": "pilcrow",
                                    "template": "blocks/paragraph_block.html",
                                },
                            ),
                            4: (
                                "wagtail.images.blocks.ImageChooserBlock",
                                (),
                                {"required": True},
                            ),
                            5: ("wagtail.blocks.CharBlock", (), {"required": False}),
                            6: (
                                "wagtail.blocks.StructBlock",
                                [[("image", 4), ("caption", 5), ("attribution", 5)]],
                                {},
                            ),
                            7: (
                                "wagtail.blocks.ListBlock",
                                (6,),
                                {"template": "blocks/gallery_block.html"},
                            ),
                            8: ("wagtail.blocks.TextBlock", (), {}),
                            9: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {
                                    "blank": True,
                                    "label": "e.g. Mary Berry",
                                    "required": False,
                                },
                            ),
                            10: (
                                "wagtail.blocks.StructBlock",
                                [[("text", 8), ("attribute_name", 9)]],
                                {},
                            ),
                            11: (
                                "wagtail.embeds.blocks.EmbedBlock",
                                (),
                                {
                                    "help_text": "Insert an embed URL e.g https://www.youtube.com/watch?v=SGJFWirQ3ks",
                                    "icon": "media",
                                    "template": "blocks/embed_block.html",
                                },
                            ),
                            12: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"default": "Frequently asked questions"},
                            ),
                            13: ("wagtail.blocks.TextBlock", (), {"required": True}),
                            14: (
                                "wagtail.blocks.StructBlock",
                                [[("question", 0), ("answer", 13)]],
                                {},
                            ),
                            15: ("wagtail.blocks.ListBlock", (14,), {}),
                            16: (
                                "wagtail.blocks.StructBlock",
                                [[("title", 12), ("item", 15)]],
                                {},
                            ),
                            17: (
                                "wagtail.documents.blocks.DocumentChooserBlock",
                                (),
                                {"template": "blocks/document_block.html"},
                            ),
                            18: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {
                                    "help_text": "Leave blank to use page's listing title.",
                                    "required": False,
                                },
                            ),
                            19: ("wagtail.blocks.PageChooserBlock", (), {}),
                            20: (
                                "wagtail.blocks.StructBlock",
                                [[("title", 18), ("page", 19)]],
                                {},
                            ),
                            21: ("wagtail.blocks.CharBlock", (), {}),
                            22: ("wagtail.blocks.URLBlock", (), {}),
                            23: (
                                "wagtail.blocks.StructBlock",
                                [[("title", 21), ("link", 22)]],
                                {},
                            ),
                            24: (
                                "wagtail.blocks.StreamBlock",
                                [[("internal_link", 20), ("external_link", 23)]],
                                {},
                            ),
                        },
                        verbose_name="Page Body",
                    ),
                ),
                (
                    "date",
                    models.DateField(blank=True, null=True, verbose_name="Post date"),
                ),
                (
                    "listing_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose an image you wish to be displayed when this page appears on listings",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose an image you wish to display when this page appears on social media",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "helparticlepage",
                "verbose_name_plural": "helparticlepages",
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="HelpIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("social_text", models.CharField(blank=True, max_length=255)),
                (
                    "listing_title",
                    models.CharField(
                        blank=True,
                        help_text="Override the page title when this page appears on listings",
                        max_length=255,
                    ),
                ),
                (
                    "listing_summary",
                    models.CharField(
                        blank=True,
                        help_text="The text description used when this page appears on listings. It's also used if meta description is absent",
                        max_length=255,
                    ),
                ),
                (
                    "appear_in_search_results",
                    models.BooleanField(
                        default=True,
                        help_text="Make this page indexable by search engines.If unchecked this page will no longer be indexed by search engines.",
                    ),
                ),
                ("subtitle", models.CharField(blank=True, max_length=255)),
                (
                    "listing_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose an image you wish to be displayed when this page appears on listings",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose an image you wish to display when this page appears on social media",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "helpindexpage",
                "verbose_name_plural": "helpindexpages",
            },
            bases=("wagtailcore.page", models.Model),
        ),
    ]
